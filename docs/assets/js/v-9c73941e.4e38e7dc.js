"use strict";(self.webpackChunksource=self.webpackChunksource||[]).push([[978],{656:(n,s,a)=>{a.r(s),a.d(s,{data:()=>p});const p={key:"v-9c73941e",path:"/bai-viet/demo-page.html",title:"demo page",lang:"vi-VN",frontmatter:{title:"demo page",description:"demo page",lang:"vi-VN"},excerpt:"",headers:[{level:2,title:"Huong dan",slug:"huong-dan",children:[]}],filePathRelative:"bai-viet/demo-page.md",git:{updatedTime:null,contributors:[]}}},705:(n,s,a)=>{a.r(s),a.d(s,{default:()=>e});const p=(0,a(252).uE)('<h2 id="huong-dan" tabindex="-1"><a class="header-anchor" href="#huong-dan" aria-hidden="true">#</a> Huong dan</h2><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// line-numbers is enabled by default</span>\n<span class="token keyword">const</span> line2 <span class="token operator">=</span> <span class="token string">&#39;This is line 2&#39;</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> line3 <span class="token operator">=</span> <span class="token string">&#39;This is line 3&#39;</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-typescript ext-ts"><pre class="language-typescript"><code><span class="token comment">// line-numbers is disabled</span>\n<span class="token keyword">const</span> line2 <span class="token operator">=</span> <span class="token string">&#39;This is line 2&#39;</span>\n<span class="token keyword">const</span> line3 <span class="token operator">=</span> <span class="token string">&#39;This is line 3&#39;</span>\n</code></pre></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n  markdown<span class="token operator">:</span> <span class="token punctuation">{</span>\r\n    importCode<span class="token operator">:</span> <span class="token punctuation">{</span>\r\n      <span class="token function-variable function">handleImportPath</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\r\n        str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@src</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;path/to/src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n  markdown<span class="token operator">:</span> <span class="token punctuation">{</span>\r\n    importCode<span class="token operator">:</span> <span class="token punctuation">{</span>\r\n      <span class="token function-variable function">handleImportPath</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\r\n        str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@src</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;path/to/src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-javascript ext-js line-numbers-mode"><pre class="language-javascript"><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>\r\n  markdown<span class="token operator">:</span> <span class="token punctuation">{</span>\r\n    importCode<span class="token operator">:</span> <span class="token punctuation">{</span>\r\n      <span class="token function-variable function">handleImportPath</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\r\n        str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@src</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;path/to/src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n</code></pre><div class="highlight-lines"><br><div class="highlight-line"> </div><br><div class="highlight-line"> </div><div class="highlight-line"> </div><br><br><br></div><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><div class="language-javascript ext-js"><pre class="language-javascript"><code>    importCode<span class="token operator">:</span> <span class="token punctuation">{</span>\r\n      <span class="token function-variable function">handleImportPath</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">str</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>\r\n        str<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">^@src</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">&#39;path/to/src&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\r\n    <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\r\n<span class="token punctuation">}</span><span class="token punctuation">;</span>\r\n</code></pre><div class="highlight-lines"><br><br><div class="highlight-line"> </div><br><br><br></div></div>',7),t={},e=(0,a(744).Z)(t,[["render",function(n,s){return p}]])},744:(n,s)=>{s.Z=(n,s)=>{const a=n.__vccOpts||n;for(const[n,p]of s)a[n]=p;return a}}}]);